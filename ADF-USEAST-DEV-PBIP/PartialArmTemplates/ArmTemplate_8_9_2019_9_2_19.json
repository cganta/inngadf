{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "ADF-USEAST-DEV-PBIP"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TableLookup_FetchPinCodes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"dataset": {
								"referenceName": "Postal_PIN_Codes",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WebLookup_GetBranchDetails",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"PinCode": {
												"value": "@item().PinCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Postal_PIN_Codes')]",
				"[concat(variables('factoryId'), '/pipelines/WebLookup_GetBranchDetails')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WebLookup_GetBranchDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://api.postalpincode.in/pincode/',pipeline().parameters.PinCode)",
								"type": "Expression"
							},
							"method": "GET"
						}
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_Insert_Postal_Branch_Details]",
							"storedProcedureParameters": {
								"Block": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Block",
										"type": "Expression"
									},
									"type": "String"
								},
								"BranchDesc": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Description",
										"type": "Expression"
									},
									"type": "String"
								},
								"BranchName": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"BranchType": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].BranchType",
										"type": "Expression"
									},
									"type": "String"
								},
								"Circle": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Circle",
										"type": "Expression"
									},
									"type": "String"
								},
								"Country": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Country",
										"type": "Expression"
									},
									"type": "String"
								},
								"DeliveryStatus": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].DeliveryStatus",
										"type": "Expression"
									},
									"type": "String"
								},
								"District": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].District",
										"type": "Expression"
									},
									"type": "String"
								},
								"Division": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Division",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pincode": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Pincode",
										"type": "Expression"
									},
									"type": "String"
								},
								"Region": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].Region",
										"type": "Expression"
									},
									"type": "String"
								},
								"State": {
									"value": {
										"value": "@json(activity('Web1').output.Response)[0].PostOffice[0].State",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"PinCode": {
						"type": "string",
						"defaultValue": "500011"
					}
				},
				"variables": {
					"output": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "TblInvoices",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"folderPath": "Invoices"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Postal_PIN_Codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Pincode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Postal_PIN_Codes]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://pbipkeyvault.vault.azure.net/"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TblInvoices",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobFloderPath",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "\n\nsource(output(\n\t\tInvoiceNumber as double,\n\t\tVendorName as string,\n\t\tInvoiceDate as timestamp,\n\t\tInvoiceAmount as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 derive(InvoiceNumber2 = left(VendorName,4)) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tfilePattern:'dataflowpreview.csv') ~> sink1"
				}
			},
			"dependsOn": []
		}
	]
}